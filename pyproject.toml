[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "heudiconv"
dynamic = ["version"]
description = "Heuristic DICOM Converter"
readme = "README.rst"
requires-python = ">=3.9"
license = {text = "Apache 2.0"}
authors = [
    {name = "HeuDiConv team and contributors"}
]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dependencies = [
    "dcmstack>=0.8",
    "etelemetry",
    "filelock>=3.0.12",
    "nibabel>=5.3.1",
    "nipype>=1.2.3",
    "pydicom>=1.0.0",
]

# Hatchling configuration
[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.vcs]
version-file = "src/heudiconv/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/heudiconv"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/docs",
    "/README.rst",
    "/COPYING",
    "/pyproject.toml",
]


[project.optional-dependencies]
tests = [
    "pytest",
    "tinydb",
    "inotify",
]
extras = [
    "duecredit",
]
datalad = [
    "datalad>=0.13.0",
]
all = [
    "pytest",
    "tinydb",
    "inotify",
    "duecredit",
    "datalad>=0.13.0",
]

[project.urls]
Homepage = "https://github.com/nipy/heudiconv"
Documentation = "https://heudiconv.readthedocs.io"
Repository = "https://github.com/nipy/heudiconv"
"Bug Tracker" = "https://github.com/nipy/heudiconv/issues"

[project.scripts]
heudiconv = "heudiconv.cli.run:main"
heudiconv_monitor = "heudiconv.cli.monitor:main"



# Pixi configuration - MINIMAL
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.pypi-dependencies]
heudiconv = { path = ".", editable = true }

[tool.pixi.dependencies]
python = ">=3.9"
dcm2niix = "*"

[tool.pixi.environments]
default = { solve-group = "default" }

# Test configuration
[tool.pytest.ini_options]
testpaths = ["src/heudiconv/tests"]
addopts = "--doctest-modules --tb=short"
filterwarnings = [
    "error",
    "ignore:module 'sre_.*' is deprecated:DeprecationWarning:traits",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore:_SixMetaPathImporter.find_spec\\(\\) not found:ImportWarning",
    "ignore:.*pkg_resources:DeprecationWarning",
    "ignore:.*Use setlocale.* instead:DeprecationWarning:nipype",
    "ignore:.*datetime.datetime.utcnow\\(\\) is deprecated.*:DeprecationWarning:nipype",
]

# Coverage configuration
[tool.coverage.run]
branch = true
relative_files = true
source = ["src/heudiconv"]
omit = ["src/heudiconv/tests/*"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Ruff configuration
[tool.ruff]
src = ["src"]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "A", "C4", "UP"]
ignore = ["E501", "B005", "A003"]
fixable = ["I", "F401"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]
"src/heudiconv/tests/*" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["heudiconv"]
force-sort-within-sections = true

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
ignore_missing_imports = true
show_error_codes = true
pretty = true
files = ["src/heudiconv"]

[[tool.mypy.overrides]]
module = "heudiconv.tests.*"
ignore_errors = true

# isort configuration (for backward compatibility)
[tool.isort]
atomic = true
force_sort_within_sections = true
honor_noqa = true
lines_between_sections = 1
profile = "black"
reverse_relative = true
sort_relative_in_force_sorted_sections = true
known_first_party = ["heudiconv"]
src_paths = ["src"]
